validsfnt-001			#TableDirectory,#conform-checksumvalidate	The CFF flavored SFNT data is valid.
validsfnt-002			#TableDirectory,#conform-checksumvalidate	The TTF flavored SFNT data is valid.
invalidsfnt-checksum-001			#TableDirectory,#conform-checksumvalidate	The checksum for the OS/2 table is set to 0.
invalidsfnt-checksum-002			#TableDirectory,#conform-checksumvalidate	The head table checksum adjustment is set to 0.
invalidsfnt-padding-001			#TableDirectory,#conform-incorrect-reject	There is no padding between two tables. The head check sum adjustment is also incorrect as a result.
invalidsfnt-padding-002			#TableDirectory,#conform-incorrect-reject	There is no padding after the final table.
invalidsfnt-padding-003			#TableDirectory,#conform-incorrect-reject	There are four extra bytes after the head table. The head check sum adjustment is also incorrect as a result.
invalidsfnt-padding-004			#TableDirectory,#conform-incorrect-reject	There are four extra bytes after the final table. The head check sum adjustment is also incorrect as a result.
invalidsfnt-padding-005			#TableDirectory,#conform-incorrect-reject	There is padding after the head table that is not null.
invalidsfnt-blocks-001			#TableDirectory,#conform-incorrect-reject	Two table blocks overlap.
invalidsfnt-blocks-002			#TableDirectory,#conform-incorrect-reject	The first table has an offset that is before the end of the table directory.
invalidsfnt-blocks-003			#TableDirectory,#conform-incorrect-reject	The final table has an offset + length that is four bytes past the end of the file.
invalidsfnt-directory-order-001			#TableDirectory,#conform-incorrect-reject	The table directory is in descending order.
invalidsfnt-searchrange-001			#TableDirectory,#conform-incorrect-reject	The searchRange is set to 0.
invalidsfnt-entryselector-001			#TableDirectory,#conform-incorrect-reject	The entrySelector is set to 0.
invalidsfnt-rangeshift-001			#TableDirectory,#conform-incorrect-reject	The rangeShift is set to 0.
tabledata-compression-size-001			#TableDirectory,#conform-compressedlarger	The "TEST" table will be larger when compressed so it must not be compressed.
tabledirectory-ascending-001			#TableDirectory,#conform-ascending	The SFNT contains 1AAA, 2AAA, A1AA, A2AA, AA1A, AA2A, AAA1, AAA2, AAAA, AAAB, AABA, ABAA, BAAA, 8ZZZ, 9ZZZ, Z8ZZ, Z9ZZ, ZZ8Z, ZZ9Z, ZZZ8, ZZZ9, YZZZ, ZYZZ, ZZYZ, ZZZY, ZZZZ, 1aaa, 2aaa, a1aa, a2aa, aa1a, aa2a, aaa1, aaa2, aaaa, aaab, aaba, abaa, baaa, 8zzz, 9zzz, z8zz, z9zz, zz8z, zz9z, zzz8, zzz9, yzzz, zyzz, zzyz, zzzy, zzzz tables in addition to the standard tables. The result of conversion to WOFF should be checked to ensure that the directory is in ascending order.
bitwiseidentical-001			#TableDirectory,#conform-identical	The SFNT has a common CFF structure. The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.
bitwiseidentical-002			#TableDirectory,#conform-identical	The SFNT has a common TTF structure. The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.
bitwiseidentical-003			#TableDirectory,#conform-identical	The SFNT has a DSIG table. (Note: this is not a valid DSIG. It should not be used for testing anything other than the presence of the table after the conversion process.) The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.
bitwiseidentical-004			#TableDirectory,#conform-identical	The SFNT has a TEST table. The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.
bitwiseidentical-005			#TableDirectory,#conform-identical	The SFNT has a table order that does not follow the recommended CFF table ordering as defined in the OpenType specification. The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.
bitwiseidentical-006			#TableDirectory,#conform-identical	The SFNT has a table order that does not follow the recommended TTF table ordering as defined in the OpenType specification. The process of converting to WOFF and back to SFNT should result in a file that is bitwise identical.